/*
Reuse the asterisk diamond program and create a function diamond (........) that takes two values, 
an integer for the side of the diamond and a char value for the 
character printed and outputs the corresponding diamond shape. The function has default values,
5 for the side and * for the character. 
The user can choose to use the default values or specify new values.
*/

/*

Output Sample 1
Do you want to use the default values? (Y/N): y
    *
   ***
  *****
 *******
*********
 *******
  *****
   ***
    *
    
Output Sample 2
Do you want to use the default values? (Y/N): n 
Enter an integer for the side of the diamond: 3 
Enter a char value for the character printed: @
  @
 @@@
@@@@@
 @@@
  @

*/


//Soludtions 
///////////////////////////
///////////////////////////
///////////////////////////
///////////////////////////



#include <iostream>
#include <string>

using namespace std;

//Declare an input function with side and character
void inputValue (int side = 5, char character = '*'){
    
    //Draw first half of the diamond
    for (int i = 1; i <= side * 2 ; i+=2){
        
        for(int j = side * 2; j >= i; j-=2 )
            cout << ' ';
        for (int k = 1; k <= i; k++)
            cout << character;
        cout << endl;
        
    }
    
    //Draw second half of the diamond
    for (int i = side * 2 - 3; i >= 1; i-=2){
        for (int j = i; j <= side * 2; j+=2)
            cout << ' ';
        for (int k = i; k >= 1; k--)
            cout << character;
        cout << endl;
        
    }
    
    
}

int main() {
    
    //Declare a character type input
    char input;
    cout << "Do you want to use the default values? (Y/N):";
    cin >> input;
    
    //Check the input statement
    
    if (input == 'y' || input == 'Y') {
        inputValue();
    }
    else if (input != 'y' || input != 'Y'){
        
        /* If an user does not select the default value,
        then use customized input values to call function
        */
        
        int sideInput;
        char characterInput;
        
            cout << "Enter an integer for the side of the diamond:";
            cin >> sideInput;
        
            cout << "Enter a char value for the character printed:";
            cin >> characterInput;
        
        inputValue(sideInput,characterInput);
    }
    
    return 0;
}

